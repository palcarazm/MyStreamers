{"version":3,"sources":["main.js"],"names":["callAPIverbose","uri","method","formdata","requiered","success","error","length","forEach","input","swal","type","title","html","timer","$","ajax","data","url","dataType","contentType","processData","async","cache","message","then","currentURL","document","location","href","replace","origin","split","jQuery","fn","loading","this","css","append","addClass","loaded","find","remove","loadToggle","has"],"mappings":"AASA,SAAAA,eACAC,EACAC,EACAC,EACAC,EACAC,EAAA,KACAC,EAAA,MAEA,IAAAC,EAAA,EACAJ,EAAAK,QAAAC,IACAF,IACA,MAAAE,GAAA,IAAAA,GACAC,KAAA,CACAC,KAAA,UACAC,MAAA,QACAC,KAAA,oCACAC,MAAA,QAKAP,EAAAH,EACAM,KAAA,CACAC,KAAA,UACAC,MAAA,QACAC,KAAA,oCACAC,MAAA,MAIAC,EAAAC,KAAA,CACAL,KAAAT,EACAe,KAAAd,EACAe,IAAAjB,EACAkB,SAAA,OACAC,aAAA,EACAC,aAAA,EACAC,OAAA,EACAC,OAAA,EACAlB,QAAA,SAAAY,GAEA,MAAAZ,EACAK,KAAA,CACAC,KAAA,UACAC,MAAA,QACAC,KAAAI,EAAAO,QACAV,MAAA,MAGAJ,KAAA,CACAC,KAAA,UACAC,MAAA,QACAC,KAAAI,EAAAO,QACAV,MAAA,MACAW,KAAA,IAAApB,MAGAC,MAAA,SAAAW,GAEA,MAAAX,EACAI,KAAA,CACAC,KAAA,QACAC,MAAA,QACAC,KAAAI,EAAAO,UAGAd,KAAA,CACAC,KAAA,QACAC,MAAA,QACAC,KAAAI,EAAAO,UACAC,KAAA,IAAAnB,QASA,SAAAoB,aACA,OAAAC,SAAAC,SAAAC,KACAC,QAAAH,SAAAC,SAAAG,OAAA,IACAD,QAAA,OAAA,IACAE,MAAA,KAAA,GACAA,MAAA,KAAA,GAKAC,OAAAC,GAAAC,QAAA,WACA,OAAAC,KAAAC,IAAA,WAAA,YAAAC,OACAvB,EAAA,eAAAwB,SAAA,mBAAAD,OACAvB,EAAA,WAAAwB,SAAA,kCAOAN,OAAAC,GAAAM,OAAA,WACA,OAAAJ,KAAAK,KAAA,oBAAAC,UAKAT,OAAAC,GAAAS,WAAA,WACA,OAAAP,KAAAQ,IAAA,oBAAArC,OAAA,EAAA6B,KAAAI,SAAAJ,KAAAD","file":"main.min.js","sourcesContent":["/**\r\n * Llama a un api y muestra alertas en función del estado\r\n * @param {String} uri Dirección de la APi\r\n * @param {String} method Tipo de solicitud\r\n * @param {FormData} formdata Datos a enviar\r\n * @param {int} requiered Valores requeridos\r\n * @param {function} success función a ejecutar en caso de éxito\r\n * @param {function} error función a ejecutar en caso de error\r\n */\r\nfunction callAPIverbose(\r\n  uri,\r\n  method,\r\n  formdata,\r\n  requiered,\r\n  success = null,\r\n  error = null\r\n) {\r\n  let length = 0;\r\n  formdata.forEach((input) => {\r\n    length++;\r\n    if (input == null || input == \"\") {\r\n      swal({\r\n        type: \"warning\",\r\n        title: \"Error\",\r\n        html: \"Todos los campos son obligatorios\",\r\n        timer: 3000,\r\n      });\r\n      return;\r\n    }\r\n  });\r\n  if (length < requiered) {\r\n    swal({\r\n      type: \"warning\",\r\n      title: \"Error\",\r\n      html: \"Todos los campos son obligatorios\",\r\n      timer: 3000,\r\n    });\r\n    return;\r\n  }\r\n  $.ajax({\r\n    type: method,\r\n    data: formdata,\r\n    url: uri,\r\n    dataType: \"json\",\r\n    contentType: false,\r\n    processData: false,\r\n    async: true,\r\n    cache: false,\r\n    success: function (data) {\r\n      //console.log(data);\r\n      if (success == null) {\r\n        swal({\r\n          type: \"success\",\r\n          title: \"Éxito\",\r\n          html: data.message,\r\n          timer: 2000,\r\n        });\r\n      } else {\r\n        swal({\r\n          type: \"success\",\r\n          title: \"Éxito\",\r\n          html: data.message,\r\n          timer: 2000,\r\n        }).then(() => success());\r\n      }\r\n    },\r\n    error: function (data) {\r\n      //console.log(data);\r\n      if (error == null) {\r\n        swal({\r\n          type: \"error\",\r\n          title: \"Error\",\r\n          html: data.message,\r\n        });\r\n      } else {\r\n        swal({\r\n          type: \"error\",\r\n          title: \"Error\",\r\n          html: data.message,\r\n        }).then(() => error());\r\n      }\r\n    },\r\n  });\r\n}\r\n/** Devuelve la URL de la página actual\r\n *\r\n * @returns URL actual\r\n */\r\nfunction currentURL() {\r\n  return document.location.href\r\n    .replace(document.location.origin, \"\")\r\n    .replace(\".php\", \"\")\r\n    .split(\"?\")[0]\r\n    .split(\"#\")[0];\r\n}\r\n/**\r\n * Muestra un overlay de carga\r\n */\r\njQuery.fn.loading = function () {\r\n  return this.css(\"position\", \"relative\").append(\r\n    $('<div></div>').addClass(\"overlay loading\").append(\r\n      $('<i></i>').addClass('fas fa-spinner fa-spin-ease')\r\n    )\r\n  );\r\n};\r\n/**\r\n * Elimina el overlay de carga\r\n */\r\n jQuery.fn.loaded = function () {\r\n  return this.find('.overlay.loading').remove();\r\n};\r\n/**\r\n * Intercambia los estados de carga\r\n */\r\n jQuery.fn.loadToggle = function() {\r\n  return this.has('.overlay.loading').length > 0 ? this.loaded() : this.loading();\r\n};"]}